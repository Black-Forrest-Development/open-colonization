micronaut:
  application:
    name: open-colonization
  server:
    port: 8080
    thread-selection: auto
    netty:
      access-logger:
        enabled: true
        exclusions:
          - /health
          - /prometheus
  router:
    static-resources:
      default:
        enabled: true
        mapping: "/**"
        paths: "classpath:static"
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    enabled: false
    endpoints:
      login:
        enabled: false
      oauth:
        enabled: false
    token:
      jwt:
        enabled: true
        signatures:
          jwks:
            auth0:
              url: ""
    intercept-url-map:
      - pattern: /swagger/**
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        access:
          - isAnonymous()
      - pattern: /health/**
        access:
          - isAnonymous()
      - pattern: /api/**
        access:
          - isAuthenticated()
      - pattern: /static/**
        access:
          - isAnonymous()
      - pattern: /**
        access:
          - isAnonymous()

jackson:
  serialization-inclusion: always
  bean-introspection-module: true

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/postgres
    driverClassName: org.postgresql.Driver
    username: postgres
    password: postgres
    schema-generate: NONE
    dialect: POSTGRES
    schema: open_colonization

netty:
  default:
    allocator:
      max-order: 3

flyway:
  datasources:
    default:
      enabled: true
      default-schema: open_colonization
      create-schemas: true
      schemas: open_colonization
      clean-schema: false



